<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.nc" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--<bean class="com.nc.controller.MyController" name="/hello"/>-->
    <!--这个是处理器映射器，这种方式，请求地址其实就是一个 Bean 的名字，然后根据这个 bean 的名字查找对应的处理器-->
    <!--<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" id="handlerMapping">
        <property name="beanName" value="/hello"/>
    </bean>-->
    <!--将url跟处理器的名称进行统一映射配置-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping" id="handlerMapping">
        <property name="mappings">
            <props>
                <prop key="/test">/hello</prop>
            </props>
        </property>
    </bean>-->

    <!--通过使用Controller接口完成的，就用这个适配器-->
    <!--HttpRequestHandlerAdapter 通过HttpRequestHandler 接口的用它-->
    <!--<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" id="handlerAdapter"/>-->

    <!--通过@ReequestMapping注解定义的，用这个-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" id="handlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" id="handlerAdapter"/>-->
    <!--简易写法-->
    <mvc:annotation-driven/>

    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="viewResolver">
        <!--jsp径位置 webapp下-->
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--自定义参数绑定-->
    <mvc:annotation-driven conversion-service="conversionService"/>
    <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean" id="conversionService">
        <property name="converters">
            <set>
                <ref bean="dateConverter"/>
            </set>
        </property>
    </bean>
    <!--文件上传  CommonsMultipartResolver-->
    <!--<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
        &lt;!&ndash;默认编码格式&ndash;&gt;
        <property name="defaultEncoding" value="UTF-8"/>
        &lt;!&ndash;上传的总文件大小&ndash;&gt;
        <property name="maxUploadSize" value="1048576"/>
        &lt;!&ndash;上传的单个文件大小&ndash;&gt;
        <property name="maxUploadSizePerFile" value="1048576"/>
        &lt;!&ndash;内存中最大数据量，超过这个数据量，数据就要往硬盘里写了&ndash;&gt;
        <property name="maxInMemorySize" value="4096"/>
        &lt;!&ndash;临时目录，超过maxInMemorySize配置的大小后，数据开始往临时目录写，等全部上传后，再将数据合并到正式文件上传目录&ndash;&gt;
        <property name="uploadTempDir" value="file:///D:\\file"/>
    </bean>
    <mvc:resources mapping="/**" location="/"/>-->
    <!--文件上传 StandardServletMultipartResolver 无法自己配置，只能去web.xml配置 multipart-config-->
    <bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver" id="multipartResolver"/>
    <!--静态资源默认被拦截，打开这个拦截-->
    <mvc:resources mapping="/**" location="/"/>
    <!--配置基本数据校验-->
    <bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" id="validatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="bundleMessageSource"/>
    </bean>
    <bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="bundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:MyMessage</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="300"/>
    </bean>
    <mvc:annotation-driven validator="validatorFactoryBean"/>
    <!--拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <ref bean="myInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <ref bean="myInterceptor2"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>
